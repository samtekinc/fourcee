type OrganizationalUnitMembership {
  orgAccountId: ID!
  orgAccount: OrganizationalAccount!
  orgUnitId: ID!
  orgUnit: OrganizationalUnit!
  orgDimensionId: ID!
  orgDimension: OrganizationalDimension!
}

type OrganizationalUnitMemberships {
  items: [OrganizationalUnitMembership]!
  nextCursor: String
}

input NewOrganizationalUnitMembership {
  orgAccountId: ID!
  orgUnitId: ID!
  orgDimensionId: ID!
}

extend type Query {
  organizationalUnitMembershipsByOrgDimension(
    orgDimensionId: ID!
    limit: Int
    nextCursor: String
  ): OrganizationalUnitMemberships!

  organizationalUnitMembershipsByOrgAccount(
    orgAccountId: ID!
    limit: Int
    nextCursor: String
  ): OrganizationalUnitMemberships!

  organizationalUnitMembershipsByOrgUnit(
    orgUnitId: ID!
    limit: Int
    nextCursor: String
  ): OrganizationalUnitMemberships!
}

extend type Mutation {
  createOrganizationalUnitMembership(
    orgUnitMembership: NewOrganizationalUnitMembership!
  ): OrganizationalUnitMembership!
  deleteOrganizationalUnitMembership(
    orgDimensionId: ID!
    orgAccountId: ID!
  ): Boolean!
}
