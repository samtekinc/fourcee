type ModuleAssignment {
  id: ID!
  moduleVersionID: ID!
  moduleVersion: ModuleVersion!
  moduleGroupID: ID!
  moduleGroup: ModuleGroup!
  orgAccountID: ID!
  orgAccount: OrgAccount!
  name: String!
  description: String!
  remoteStateRegion: String!
  remoteStateBucket: String!
  remoteStateKey: String!
  arguments: [Argument!]!
  awsProviderConfigurations: [AwsProviderConfiguration!]
  gcpProviderConfigurations: [GcpProviderConfiguration!]
  status: ModuleAssignmentStatus!
  modulePropagationID: ID
  modulePropagation: ModulePropagation
  terraformDriftCheckRequests(
    filters: TerraformDriftCheckRequestFilters
    limit: Int
    offset: Int
  ): [TerraformDriftCheckRequest!]!
  terraformExecutionRequests(
    filters: TerraformExecutionRequestFilters
    limit: Int
    offset: Int
  ): [TerraformExecutionRequest!]!
  terraformConfiguration: String!

  # expiremental
  stateVersions(limit: Int, offset: Int): [StateVersion!]!
}

input NewModuleAssignment {
  moduleVersionID: ID!
  moduleGroupID: ID!
  orgAccountID: ID!
  name: String!
  description: String!
  arguments: [ArgumentInput!]!
  awsProviderConfigurations: [AwsProviderConfigurationInput!]
  gcpProviderConfigurations: [GcpProviderConfigurationInput!]
}

input ModuleAssignmentUpdate {
  name: String
  description: String
  moduleVersionID: ID
  arguments: [ArgumentInput!]
  awsProviderConfigurations: [AwsProviderConfigurationInput!]
  gcpProviderConfigurations: [GcpProviderConfigurationInput!]
}

input ModuleAssignmentFilters {
  nameContains: String
  descriptionContains: String
  status: ModuleAssignmentStatus
  isPropagated: Boolean
}

enum ModuleAssignmentStatus {
  ACTIVE
  INACTIVE
}

extend type Query {
  moduleAssignment(moduleAssignmentID: ID!): ModuleAssignment!
  moduleAssignments(
    filters: ModuleAssignmentFilters
    limit: Int
    offset: Int
  ): [ModuleAssignment!]!
}

extend type Mutation {
  createModuleAssignment(
    moduleAssignment: NewModuleAssignment!
  ): ModuleAssignment!
  updateModuleAssignment(
    moduleAssignmentID: ID!
    moduleAssignmentUpdate: ModuleAssignmentUpdate!
  ): ModuleAssignment!
  deleteModuleAssignment(moduleAssignmentID: ID!): Boolean!
}
