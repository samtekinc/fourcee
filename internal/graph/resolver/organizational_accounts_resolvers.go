package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/sheacloud/tfom/internal/graph/generated"
	"github.com/sheacloud/tfom/pkg/models"
)

// CreateOrganizationalAccount is the resolver for the createOrganizationalAccount field.
func (r *mutationResolver) CreateOrganizationalAccount(ctx context.Context, orgAccount models.NewOrganizationalAccount) (*models.OrganizationalAccount, error) {
	return r.apiClient.PutOrganizationalAccount(ctx, &orgAccount)
}

// DeleteOrganizationalAccount is the resolver for the deleteOrganizationalAccount field.
func (r *mutationResolver) DeleteOrganizationalAccount(ctx context.Context, orgAccountID string) (bool, error) {
	err := r.apiClient.DeleteOrganizationalAccount(ctx, orgAccountID)
	return err == nil, err
}

// UpdateOrganizationalAccount is the resolver for the updateOrganizationalAccount field.
func (r *mutationResolver) UpdateOrganizationalAccount(ctx context.Context, orgAccountID string, update models.OrganizationalAccountUpdate) (*models.OrganizationalAccount, error) {
	return r.apiClient.UpdateOrganizationalAccount(ctx, orgAccountID, &update)
}

// OrgUnitMemberships is the resolver for the orgUnitMemberships field.
func (r *organizationalAccountResolver) OrgUnitMemberships(ctx context.Context, obj *models.OrganizationalAccount, limit *int, nextCursor *string) (*models.OrganizationalUnitMemberships, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnitMembershipsByAccount(ctx, obj.OrgAccountId, int32(*limit), aws.ToString(nextCursor))
}

// ModuleAssignments is the resolver for the moduleAssignments field.
func (r *organizationalAccountResolver) ModuleAssignments(ctx context.Context, obj *models.OrganizationalAccount, limit *int, nextCursor *string) (*models.ModuleAssignments, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetModuleAssignmentsByOrgAccountId(ctx, obj.OrgAccountId, int32(*limit), aws.ToString(nextCursor))
}

// OrganizationalAccount is the resolver for the organizationalAccount field.
func (r *queryResolver) OrganizationalAccount(ctx context.Context, orgAccountID string) (*models.OrganizationalAccount, error) {
	return r.apiClient.GetOrganizationalAccount(ctx, orgAccountID)
}

// OrganizationalAccounts is the resolver for the organizationalAccounts field.
func (r *queryResolver) OrganizationalAccounts(ctx context.Context, limit *int, nextCursor *string) (*models.OrganizationalAccounts, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalAccounts(ctx, int32(*limit), aws.ToString(nextCursor))
}

// OrganizationalAccount returns generated.OrganizationalAccountResolver implementation.
func (r *Resolver) OrganizationalAccount() generated.OrganizationalAccountResolver {
	return &organizationalAccountResolver{r}
}

type organizationalAccountResolver struct{ *Resolver }
