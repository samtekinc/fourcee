package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/sheacloud/tfom/internal/graph/generated"
	"github.com/sheacloud/tfom/pkg/models"
)

// ModuleAssignment is the resolver for the moduleAssignment field.
func (r *applyExecutionRequestResolver) ModuleAssignment(ctx context.Context, obj *models.ApplyExecutionRequest) (*models.ModuleAssignment, error) {
	panic(fmt.Errorf("not implemented: ModuleAssignment - moduleAssignment"))
}

// ApplyExecutionRequest is the resolver for the applyExecutionRequest field.
func (r *queryResolver) ApplyExecutionRequest(ctx context.Context, applyExecutionRequestID string, withOutputs *bool) (*models.ApplyExecutionRequest, error) {
	return r.apiClient.GetApplyExecutionRequest(ctx, applyExecutionRequestID, aws.ToBool(withOutputs))
}

// ApplyExecutionRequests is the resolver for the applyExecutionRequests field.
func (r *queryResolver) ApplyExecutionRequests(ctx context.Context, limit *int, nextCursor *string, withOutputs *bool) (*models.ApplyExecutionRequests, error) {
	if limit == nil {
		limit = aws.Int(100)
	}

	return r.apiClient.GetApplyExecutionRequests(ctx, int32(*limit), aws.ToString(nextCursor), aws.ToBool(withOutputs))
}

// ApplyExecutionRequest returns generated.ApplyExecutionRequestResolver implementation.
func (r *Resolver) ApplyExecutionRequest() generated.ApplyExecutionRequestResolver {
	return &applyExecutionRequestResolver{r}
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type applyExecutionRequestResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
