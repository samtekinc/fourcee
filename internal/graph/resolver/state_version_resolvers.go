package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"encoding/json"

	"github.com/sheacloud/tfom/internal/graph/generated"
	"github.com/sheacloud/tfom/pkg/models"
)

// StateFile is the resolver for the stateFile field.
func (r *queryResolver) StateFile(ctx context.Context, bucket string, key string, versionID string) (*models.StateFile, error) {
	return r.apiClient.GetStateFileVersion(ctx, bucket, key, versionID)
}

// AttributesJSON is the resolver for the attributesJSON field.
func (r *stateResourceResolver) AttributesJSON(ctx context.Context, obj *models.StateResource) (string, error) {
	attributesJSON, err := json.Marshal(obj.Attributes)
	if err != nil {
		return "", err
	}
	return string(attributesJSON), nil
}

// StateFile is the resolver for the stateFile field.
func (r *stateVersionResolver) StateFile(ctx context.Context, obj *models.StateVersion) (*models.StateFile, error) {
	return r.apiClient.GetStateFileVersion(ctx, obj.Bucket, obj.Key, obj.VersionID)
}

// StateResource returns generated.StateResourceResolver implementation.
func (r *Resolver) StateResource() generated.StateResourceResolver { return &stateResourceResolver{r} }

// StateVersion returns generated.StateVersionResolver implementation.
func (r *Resolver) StateVersion() generated.StateVersionResolver { return &stateVersionResolver{r} }

type stateResourceResolver struct{ *Resolver }
type stateVersionResolver struct{ *Resolver }
