package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/sheacloud/tfom/internal/graph/generated"
	"github.com/sheacloud/tfom/pkg/models"
)

// CreateAwsIamPolicy is the resolver for the createAwsIamPolicy field.
func (r *mutationResolver) CreateAwsIamPolicy(ctx context.Context, awsIamPolicy models.NewAwsIamPolicy) (*models.AwsIamPolicy, error) {
	return r.apiClient.CreateAwsIamPolicy(ctx, &awsIamPolicy)
}

// DeleteAwsIamPolicy is the resolver for the deleteAwsIamPolicy field.
func (r *mutationResolver) DeleteAwsIamPolicy(ctx context.Context, awsIamPolicyID uint) (bool, error) {
	err := r.apiClient.DeleteAwsIamPolicy(ctx, awsIamPolicyID)
	return err == nil, err
}

// UpdateAwsIamPolicy is the resolver for the updateAwsIamPolicy field.
func (r *mutationResolver) UpdateAwsIamPolicy(ctx context.Context, awsIamPolicyID uint, update models.AwsIamPolicyUpdate) (*models.AwsIamPolicy, error) {
	return r.apiClient.UpdateAwsIamPolicy(ctx, awsIamPolicyID, &update)
}

// AwsIamPolicy is the resolver for the awsIamPolicy field.
func (r *queryResolver) AwsIamPolicy(ctx context.Context, awsIamPolicyID uint) (*models.AwsIamPolicy, error) {
	return r.apiClient.GetAwsIamPolicy(ctx, awsIamPolicyID)
}

// AwsIamPolicies is the resolver for the awsIamPolicies field.
func (r *queryResolver) AwsIamPolicies(ctx context.Context, filters *models.AwsIamPolicyFilters, limit *int, offset *int) ([]*models.AwsIamPolicy, error) {
	return r.apiClient.GetAwsIamPolicies(ctx, filters, limit, offset)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
