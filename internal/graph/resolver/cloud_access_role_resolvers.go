package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/sheacloud/tfom/internal/graph/generated"
	"github.com/sheacloud/tfom/pkg/models"
)

// AwsIamPolicies is the resolver for the awsIamPolicies field.
func (r *cloudAccessRoleResolver) AwsIamPolicies(ctx context.Context, obj *models.CloudAccessRole) ([]*models.AwsIamPolicy, error) {
	return r.apiClient.GetAwsIamPoliciesForCloudAccessRole(ctx, obj.ID, nil, nil, nil)
}

// OrgUnit is the resolver for the orgUnit field.
func (r *cloudAccessRoleResolver) OrgUnit(ctx context.Context, obj *models.CloudAccessRole) (*models.OrgUnit, error) {
	return r.apiClient.GetOrgUnit(ctx, obj.OrgUnitID)
}

// CreateCloudAccessRole is the resolver for the createCloudAccessRole field.
func (r *mutationResolver) CreateCloudAccessRole(ctx context.Context, cloudAccessRole models.NewCloudAccessRole) (*models.CloudAccessRole, error) {
	return r.apiClient.CreateCloudAccessRole(ctx, &cloudAccessRole)
}

// DeleteCloudAccessRole is the resolver for the deleteCloudAccessRole field.
func (r *mutationResolver) DeleteCloudAccessRole(ctx context.Context, cloudAccessRoleID uint) (bool, error) {
	err := r.apiClient.DeleteCloudAccessRole(ctx, cloudAccessRoleID)
	return err == nil, err
}

// UpdateCloudAccessRole is the resolver for the updateCloudAccessRole field.
func (r *mutationResolver) UpdateCloudAccessRole(ctx context.Context, cloudAccessRoleID uint, update models.CloudAccessRoleUpdate) (*models.CloudAccessRole, error) {
	return r.apiClient.UpdateCloudAccessRole(ctx, cloudAccessRoleID, &update)
}

// CloudAccessRole is the resolver for the cloudAccessRole field.
func (r *queryResolver) CloudAccessRole(ctx context.Context, cloudAccessRoleID uint) (*models.CloudAccessRole, error) {
	return r.apiClient.GetCloudAccessRole(ctx, cloudAccessRoleID)
}

// CloudAccessRoles is the resolver for the cloudAccessRoles field.
func (r *queryResolver) CloudAccessRoles(ctx context.Context, filters *models.CloudAccessRoleFilters, limit *int, offset *int) ([]*models.CloudAccessRole, error) {
	return r.apiClient.GetCloudAccessRoles(ctx, filters, limit, offset)
}

// CloudAccessRole returns generated.CloudAccessRoleResolver implementation.
func (r *Resolver) CloudAccessRole() generated.CloudAccessRoleResolver {
	return &cloudAccessRoleResolver{r}
}

type cloudAccessRoleResolver struct{ *Resolver }
