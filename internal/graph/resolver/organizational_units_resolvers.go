package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"strings"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/sheacloud/tfom/internal/graph/generated"
	"github.com/sheacloud/tfom/pkg/models"
)

// CreateOrganizationalUnit is the resolver for the createOrganizationalUnit field.
func (r *mutationResolver) CreateOrganizationalUnit(ctx context.Context, orgUnit models.NewOrganizationalUnit) (*models.OrganizationalUnit, error) {
	return r.apiClient.PutOrganizationalUnit(ctx, &orgUnit)
}

// DeleteOrganizationalUnit is the resolver for the deleteOrganizationalUnit field.
func (r *mutationResolver) DeleteOrganizationalUnit(ctx context.Context, orgDimensionID string, orgUnitID string) (bool, error) {
	err := r.apiClient.DeleteOrganizationalUnit(ctx, orgDimensionID, orgUnitID)
	return err == nil, err
}

// UpdateOrganizationalUnit is the resolver for the updateOrganizationalUnit field.
func (r *mutationResolver) UpdateOrganizationalUnit(ctx context.Context, orgDimensionID string, orgUnitID string, update models.OrganizationalUnitUpdate) (*models.OrganizationalUnit, error) {
	return r.apiClient.UpdateOrganizationalUnit(ctx, orgDimensionID, orgUnitID, &update)
}

// OrgDimension is the resolver for the orgDimension field.
func (r *organizationalUnitResolver) OrgDimension(ctx context.Context, obj *models.OrganizationalUnit) (*models.OrganizationalDimension, error) {
	return r.apiClient.GetOrganizationalDimension(ctx, obj.OrgDimensionId)
}

// ParentOrgUnit is the resolver for the parentOrgUnit field.
func (r *organizationalUnitResolver) ParentOrgUnit(ctx context.Context, obj *models.OrganizationalUnit) (*models.OrganizationalUnit, error) {
	if obj.ParentOrgUnitId == "" {
		return nil, nil
	}
	return r.apiClient.GetOrganizationalUnit(ctx, obj.OrgDimensionId, obj.ParentOrgUnitId)
}

// Children is the resolver for the children field.
func (r *organizationalUnitResolver) Children(ctx context.Context, obj *models.OrganizationalUnit, limit *int, nextCursor *string) (*models.OrganizationalUnits, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnitsByParent(ctx, obj.OrgDimensionId, obj.OrgUnitId, int32(*limit), aws.ToString(nextCursor))
}

// DownstreamOrgUnits is the resolver for the downstreamOrgUnits field.
func (r *organizationalUnitResolver) DownstreamOrgUnits(ctx context.Context, obj *models.OrganizationalUnit, limit *int, nextCursor *string) (*models.OrganizationalUnits, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnitsByHierarchy(ctx, obj.OrgDimensionId, obj.Hierarchy+obj.OrgUnitId, int32(*limit), aws.ToString(nextCursor))
}

// UpstreamOrgUnits is the resolver for the upstreamOrgUnits field.
func (r *organizationalUnitResolver) UpstreamOrgUnits(ctx context.Context, obj *models.OrganizationalUnit) (*models.OrganizationalUnits, error) {
	// TODO: Improve this by adding a bulk query function to the DB client to do batch GETs

	if obj.Hierarchy == "/" {
		return &models.OrganizationalUnits{
			Items:      []models.OrganizationalUnit{},
			NextCursor: "",
		}, nil
	}

	parentOrgUnitIds := strings.Split(strings.Trim(obj.Hierarchy, "/"), "/")
	parentsOrgUnits := make([]models.OrganizationalUnit, len(parentOrgUnitIds))
	for i, parentOrgUnitId := range parentOrgUnitIds {
		parentOrgUnit, err := r.apiClient.GetOrganizationalUnit(ctx, obj.OrgDimensionId, parentOrgUnitId)
		if err != nil {
			return nil, err
		}
		parentsOrgUnits[i] = *parentOrgUnit
	}

	return &models.OrganizationalUnits{
		Items:      parentsOrgUnits,
		NextCursor: "",
	}, nil
}

// OrgUnitMemberships is the resolver for the orgUnitMemberships field.
func (r *organizationalUnitResolver) OrgUnitMemberships(ctx context.Context, obj *models.OrganizationalUnit, limit *int, nextCursor *string) (*models.OrganizationalUnitMemberships, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnitMembershipsByOrgUnit(ctx, obj.OrgUnitId, int32(*limit), aws.ToString(nextCursor))
}

// ModulePropagations is the resolver for the modulePropagations field.
func (r *organizationalUnitResolver) ModulePropagations(ctx context.Context, obj *models.OrganizationalUnit, limit *int, nextCursor *string) (*models.ModulePropagations, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetModulePropagationsByOrgUnitId(ctx, obj.OrgUnitId, int32(*limit), aws.ToString(nextCursor))
}

// OrganizationalUnit is the resolver for the organizationalUnit field.
func (r *queryResolver) OrganizationalUnit(ctx context.Context, orgDimensionID string, orgUnitID string) (*models.OrganizationalUnit, error) {
	return r.apiClient.GetOrganizationalUnit(ctx, orgDimensionID, orgUnitID)
}

// OrganizationalUnits is the resolver for the organizationalUnits field.
func (r *queryResolver) OrganizationalUnits(ctx context.Context, limit *int, nextCursor *string) (*models.OrganizationalUnits, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnits(ctx, int32(*limit), aws.ToString(nextCursor))
}

// OrganizationalUnitsByDimension is the resolver for the organizationalUnitsByDimension field.
func (r *queryResolver) OrganizationalUnitsByDimension(ctx context.Context, orgDimensionID string, limit *int, nextCursor *string) (*models.OrganizationalUnits, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnitsByDimension(ctx, orgDimensionID, int32(*limit), aws.ToString(nextCursor))
}

// OrganizationalUnitsByParent is the resolver for the organizationalUnitsByParent field.
func (r *queryResolver) OrganizationalUnitsByParent(ctx context.Context, orgDimensionID string, parentOrgUnitID string, limit *int, nextCursor *string) (*models.OrganizationalUnits, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnitsByParent(ctx, orgDimensionID, parentOrgUnitID, int32(*limit), aws.ToString(nextCursor))
}

// OrganizationalUnitsByHierarchy is the resolver for the organizationalUnitsByHierarchy field.
func (r *queryResolver) OrganizationalUnitsByHierarchy(ctx context.Context, orgDimensionID string, hierarchy string, limit *int, nextCursor *string) (*models.OrganizationalUnits, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetOrganizationalUnitsByHierarchy(ctx, orgDimensionID, hierarchy, int32(*limit), aws.ToString(nextCursor))
}

// OrganizationalUnit returns generated.OrganizationalUnitResolver implementation.
func (r *Resolver) OrganizationalUnit() generated.OrganizationalUnitResolver {
	return &organizationalUnitResolver{r}
}

type organizationalUnitResolver struct{ *Resolver }
