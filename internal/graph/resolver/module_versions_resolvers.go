package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/sheacloud/tfom/pkg/models"
)

// CreateModuleVersion is the resolver for the createModuleVersion field.
func (r *mutationResolver) CreateModuleVersion(ctx context.Context, moduleVersion models.NewModuleVersion) (*models.ModuleVersion, error) {
	return r.apiClient.PutModuleVersion(ctx, &moduleVersion)
}

// DeleteModuleVersion is the resolver for the deleteModuleVersion field.
func (r *mutationResolver) DeleteModuleVersion(ctx context.Context, moduleGroupID string, moduleVersionID string) (bool, error) {
	err := r.apiClient.DeleteModuleVersion(ctx, moduleGroupID, moduleVersionID)
	return err == nil, err
}

// ModuleVersion is the resolver for the moduleVersion field.
func (r *queryResolver) ModuleVersion(ctx context.Context, moduleGroupID string, moduleVersionID string) (*models.ModuleVersion, error) {
	return r.apiClient.GetModuleVersion(ctx, moduleGroupID, moduleVersionID)
}

// ModuleVersions is the resolver for the moduleVersions field.
func (r *queryResolver) ModuleVersions(ctx context.Context, moduleGroupID string, limit *int, nextCursor *string) (*models.ModuleVersions, error) {
	if limit == nil {
		limit = aws.Int(100)
	}
	return r.apiClient.GetModuleVersions(ctx, moduleGroupID, int32(*limit), aws.ToString(nextCursor))
}
