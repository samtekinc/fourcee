package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/sheacloud/tfom/internal/graph/generated"
	"github.com/sheacloud/tfom/pkg/models"
)

// CreateOrgDimension is the resolver for the createOrgDimension field.
func (r *mutationResolver) CreateOrgDimension(ctx context.Context, orgDimension models.NewOrgDimension) (*models.OrgDimension, error) {
	return r.apiClient.CreateOrgDimension(ctx, &orgDimension)
}

// DeleteOrgDimension is the resolver for the deleteOrgDimension field.
func (r *mutationResolver) DeleteOrgDimension(ctx context.Context, orgDimensionID uint) (bool, error) {
	err := r.apiClient.DeleteOrgDimension(ctx, orgDimensionID)
	return err == nil, err
}

// OrgUnits is the resolver for the orgUnits field.
func (r *orgDimensionResolver) OrgUnits(ctx context.Context, obj *models.OrgDimension, filters *models.OrgUnitFilters, limit *int, offset *int) ([]*models.OrgUnit, error) {
	return r.apiClient.GetOrgUnitsForDimension(ctx, obj.ID, filters, limit, offset)
}

// ModulePropagations is the resolver for the modulePropagations field.
func (r *orgDimensionResolver) ModulePropagations(ctx context.Context, obj *models.OrgDimension, filters *models.ModulePropagationFilters, limit *int, offset *int) ([]*models.ModulePropagation, error) {
	return r.apiClient.GetModulePropagationsForOrgDimension(ctx, obj.ID, filters, limit, offset)
}

// OrgDimension is the resolver for the orgDimension field.
func (r *queryResolver) OrgDimension(ctx context.Context, orgDimensionID uint) (*models.OrgDimension, error) {
	return r.apiClient.GetOrgDimension(ctx, orgDimensionID)
}

// OrgDimensions is the resolver for the orgDimensions field.
func (r *queryResolver) OrgDimensions(ctx context.Context, filters *models.OrgDimensionFilters, limit *int, offset *int) ([]*models.OrgDimension, error) {
	return r.apiClient.GetOrgDimensions(ctx, filters, limit, offset)
}

// OrgDimension returns generated.OrgDimensionResolver implementation.
func (r *Resolver) OrgDimension() generated.OrgDimensionResolver { return &orgDimensionResolver{r} }

type orgDimensionResolver struct{ *Resolver }
